{"version":3,"sources":["logo.svg","Components/Negociacao.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Negociacao","state","neg","_this2","this","axios","get","headers","Content-Type","Authorization","then","r","f","data","setState","negociacoes","console","log","react_default","a","createElement","className","length","respostasFornecedores","map","i","key","nomeFornecedor","tipoRegistro","idx","codigoItem","colSpan","descricao","precoUltimaCompra","precoFornecedorNegociado","qtdNegociada","posicaoFornecedorNegociado","res","melhorPreco","preco","Component","App","Negociacao_Negociacao","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uMCInBC,oNAEjBC,MAAQ,CACJC,IAAK,uFAIW,IAAAC,EAAAC,KAChBC,IAAMC,IAAI,6EAA8E,CACpFC,QAAS,CACLC,eAAgB,mBAChBC,cAAiB,mmJAEtBC,KAAK,SAAAC,GAEJ,IAAMC,EAAID,EAAEE,KAEZV,EAAKW,SAAS,CAAEZ,IAAKU,EAAEG,cACvBC,QAAQC,IAAId,EAAKF,MAAMC,wCAM3B,OACIgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uCACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,eAEIhB,KAAKH,MAAMC,IAAIoB,OAAS,GACxBlB,KAAKH,MAAMC,IAAI,GAAGqB,sBAAsBC,IAAI,SAACb,EAAEc,GAC3C,OACIP,EAAAC,EAAAC,cAAA,MAAIM,IAAKD,GACJd,EAAEgB,oBAQ3BT,EAAAC,EAAAC,cAAA,aAEQhB,KAAKH,MAAMC,IAAIsB,IAAI,SAAAtB,GACf,MAAyB,MAArBA,EAAI0B,aAEAV,EAAAC,EAAAC,cAAA,MAAIM,IAAKxB,EAAI2B,KACTX,EAAAC,EAAAC,cAAA,UAAKlB,EAAI4B,YACTZ,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,MAAM7B,EAAI8B,YAI1Bd,EAAAC,EAAAC,cAAA,MAAIM,IAAKxB,EAAI2B,KACTX,EAAAC,EAAAC,cAAA,UAAMlB,EAAI4B,YACVZ,EAAAC,EAAAC,cAAA,UAAKlB,EAAI8B,WACTd,EAAAC,EAAAC,cAAA,UAAKlB,EAAI+B,mBACTf,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,UAAKlB,EAAIgC,0BACThB,EAAAC,EAAAC,cAAA,UAAKlB,EAAIiC,cACTjB,EAAAC,EAAAC,cAAA,UAAKlB,EAAIkC,4BACRlC,EAAIqB,sBAAsBC,IAAI,SAACa,EAAKZ,GACjC,OACIP,EAAAC,EAAAC,cAAA,MAAIC,UAAWgB,EAAIC,YAAc,EAAI,SAAW,SAAUZ,IAAKD,GAAIY,EAAIE,sBAtEnFC,cCSzBC,mLANX,OACEvB,EAAAC,EAAAC,cAACsB,EAAD,aAHYF,aCOEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.519ac43d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './Negociacao.css'\r\n\r\nexport default class Negociacao extends Component {\r\n\r\n    state = {\r\n        neg: []\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('https://usj.comlink.com.br/api/v1/cotacao/215461/ordernarpor/x/ascoudesc/a', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer lbKah4gQMMv_WcEF7f2Lov4sLKnMS-H7mLHutn54IxQ_euHBFxA51_8SfIUaQfEe1S46FKZfbUbTvciNrRi7aR5Z3--2DmREDyx38amV9h3b5_2w0XL2v-ldCRcWDM0k1E4EL4WH8l3dwLHpFo1vKKwoV5OpsKVCvN70OUfLYmfkXeMlEHZDWyfaw8nAzeMNifj_72MhiDcHYSpB2irbowwePY66LORmpbBTsI-2-ccLBrdD_nlT7l7oxRIXDawLqEOlynpzTmQNuVYgY6Ej_K3K9aOaz0cHaTmLEY9tX5_DkvfO7wyq55PvwWmjbH3wHzzKi8mEmCEUpd7NXSXVEn_2zkPTHEXmcAYsqwxIvFgZcTK9JBRmnEBnn6-GcVG108MegZSw9vBHyK1SeDKJGYrsWwbpZpK-RayojID13_9B2_q228nUcfU7KG4jKVGe66MNaTuPjtCoSe1E2vgmeWbZg_ax7hNtiSGICezVk4f-ygAi8qVqcYYJC1AU6Fug9apYkWYrRaXfe3bY-fpn4Jb3oyWRe-6ZmvMXzp0bbAXNBqTptFJGZ7xGYQI--g4lzQG2jLdo9ydjaWEC6Su2sQmTfIzpTIneqeN0k6eiPDdn5iU3S7tInemGfMo3lI6hoZmyKelQR4cdsX1sQXMeis96IrWiLDhVMAD9y-sl3pCKzHMLUPmmVMfqGEY3_BoX9fwRBlb9rnUu8XjtJlXDdCc3k8fiO4E5GRggCcN1ARKDZU102zb784XyadWjQe77iuVvb0rxm7_seufeLCcPnzuCDpfd0RYIqa9kkqKUjzVdeh5Agl5CE4j3iVD4_inud6hXj5f0wpPu6y6ldsCvNqFuActlDyzMF-kYOnhKFe2inWNwayboIaMaPs-h9IYWU0L602M-odO3P9FYDFlLaUve1Iive15_OOebYy9vJO_kohERtn6Ity3cViuPIDCyeO8PLDyFeLdWoQMtaQ3hAyHPlW4b3W05TGQkbJSyq2T9QBMFswkUDomI3MAHs0dze4EyN3IPGInbWo6Bce21kYiKOl27uEjkiUIW8XPP1AZlIST5C6zwWl94W520qjdIYKPT242WF5RzQqJhpyHoUhkZM0N5pRRof73NsUlStvOKcepEQQKHDRLPJRpZr486C_-yRDRbWlnFvKVqhH5n6UKxQI3SbFJGdrOWrHXt354M0F0XTnp3L3m6z_qvlw2xe4lclojE1p9J0mAOIRdzUKloOb-skvDcZN_14xmH9te6p4rQAeMqPC9Q6T6yxi2Jgwj6SOlMlMebu8BaWQZXADu0aCT9t8bNhoTysZAjeZdd86qR-NT30qDc2PRWUb82cANolyD_Bus5jQHguK-AYoTI5c68zCkpXvgWr-vtyIlrkZOEyov2yna7zbSZXfA--CZ6GKn0KyHLLsQ5PBW_sPTCy3fTKZ_I9GnIqPAMV5Rb8d_xJiDpMRua8yQDieygN8hWwEbRJqSUaWCRIZP9wTR6wHfeDlBCJjzvYGIq7erkOPTTEpBjiXOUq2_nXAU_9MtmnOLkiUbJ2YwoW9SkgZoOHq96U4e3H9IyhSElW5VhWw8jW79KcUKPYBmBaTsqXU77qc2iyguOwn3YUK1qoNLtNKIbcmloRwTNrseYCTHQhydJCyF9145FKHvnTpBbQHL0WhMw4Bu_J_2r2YReTJxoLe1ICwwUKb9KHHFJCyKd9e1XboRmfpsC5XwaLYB5z98mT1Z1YTje6_zXfXPWQWRcyFMCOE39OcRz6eO1aPC_O5vV1HCUFPIz8N9QfvKvk7stUtKWqwnU8XBfMLlUMUCQVnFBTbkxqIOV_v9vipMbZ7E1hII-VOl9ysIN4S_pUcR1mSzs9bEBev7cwwFe6issuQtJplYMg375VgspQxJXMfjFXn7ZYm7kgo4_nrVCZRwm4JxBpqGdloenh0bmVpFS_t-kAbgh76VXL9kbTJKwlEeZF92oHFIDkmgMhzPCnR_uppJWZPk0r4UcDWPeTbUCFkhdeupoQZIuT8Pzoe6SxfgBIzxVPvdiQFXZXz5qB5t7D1vovO_56jNzMw87USClCXzfSsWO_VZ0ifQ52Y6ztlu2F4nEo7JJj7foDtzu2PY65JhScBrKYOu25EN_VJUmjFat9SK2IyCaW2sQ5HFjyn2rfBJcXV4UQC90Y78Ld1pkYWnHMd-Ys9LeJmUv3e8z5L_0TDcyx9m33lIWdPBhPT03cC7D4USqr9LGriNxsKePLVL73TIz1mviSMblhXR48B-HCCS-H7FtfZO8rZzD0h0kFbOPVC52tIaLVKOM5Rtuxh5CouCBWU5Y2uZeIydZf3ZAYpMv3VsCSxYO_L-Y5t-4JeihWFZTXqlwBrgf0ZqlzXGbbEOlgb1_t49Xx1x_Wo2adzyFkutfCrwAem7yU_IXcUcAvUQ8MgFZOq9V2JTL8LaRG2v7eaI8N0R_TRIR3Q5FTcpetTHKI1UFGwB1KHuERWMrcYu0evLmDMte6FEcXOZMVBLIeSTzmP_zw1iArXrSfDTlVaHrXV0wzPxJILKrvHmpkDWtEwKiz_wMVoxhKQ43Vl9JLoG0L-rCrMhB2vajlL9dItOfUWianFHFSkvMtQo-Xj7ydnowwvYT8PH-_cNyAxt1XrDbJUZknsEwwAbsLHQE2oRK7xOFRYsyYiQFoUdOPE31uLsUR-2rQ6meHFwLzF9SCGx9b7SEJ_eH1y0H8bBibNFQLnXQrY5q7EXqn1IFzcgZFzK7qJ3_64KDsnhv7sn7R9Bl-G_CarEjBWZv_YblNlBBOz5_lKVMgAk1hQyhl7WuVQpSUVOUIYbHidtMlpAKyJGV4ak1Bh5UAyhbKhgx7ik4ttnnZBhQHZcdrM2Nf9Nt_lOwpAErpjXDPscsd-X3mYFtY4gzb4Y12pxK68zkzqFW7X43WQfd2tRpxXV2akjy9zcD5cia2QnkN5LTizAj7yGHoOhh4bQvP5QyCnHSJpTRSam1E58Mhl7k0ieY_4f2j6juYBWTwcy6tqjogN-qzN_HPnjlJ0TLXE_9KIGlGYBvtdgPEgEcsWL5Rn7yyK7LbyVRXb0OHD11kKqcoVuLYLiDtfks1XPFSmpViGsKY7AhHXbtWUgF77NPfVM2lUxU6RGuhREUuCCdwO0VQwCV9KG4CbjlWPk3DwCFAwDvVCT28OUCrKr2N0UXAzj7mFy6yKzxMxHH1Crv0ATQdGS3tKkFqOHCIAWVgh69mJeP9urXdYYTo5bzdVpxsCY37ZGN4hnlEn5XdpOpzJH3c-Ji1cR0smaMObUlrlXjHme55HfdvtiShBFNgE0ZUyMIMpjQVNFs5OG_GR-fFlBI4PTQKtCQjrXBhskS5HaWcntlVjwmqGR1v5xue64cGiJNjr0u0MgqvrTMJgTM9wIf2cdJz1bzhd2o9fywKKHzoRjrUbimEwHfNot0_Bwqo0m_FgS67ENrNdLLisle9oHFa-NowcnFtIIPbXwrB2EjVkhG6w-dsa4ehHX7Jl8UGHXSmlVcIBGndBug_aiwNcdxctis23BJMOfCj_w971k3mPodpXL9FHeou2KknMZLDpmbQekju_BFnnmhp4rW9P3dUh1jQnT94tvJO8ZR8KV0oQHRDTluE8tZ1eWbifUDQaqbPHRzwf4vCyeLQCvlmmPtGUzuhXyPGxLAM8rqcMGeBtBqiumec7sfsdi26nfk1OxRgdXn4oyFCgBPbzRHwtsmKAGrgaKjAd7s2NDYdxauRWNs9GdR0QWDYEHTJi18p6Gn9m0S2BzFIaPjagUGOw_lgtwUDqfqjguOM2vWyjngCrju_LrMU99ahYzDXoqRi4H4BW_vdWK841x6lc2sX1TVw9-JtoJyqFP5F1hRAl2iwJCjdpG1wkT2hG8dIiZbtlOyJH-FvY6M8lqORxu08_oW2FZGn-Cy6EhrTLPcVaCXimCE5kOUCOZvajg7hF5Yf9Y63OkpEfJEm_-BZBgSPA6ZjRUJXgr1c1HLTGKdMY7p6QMkoGt6XDz7R_DKowy4a7-cPlU5ekIVzzpQOw7V9TtN119E5FlGBO99YVAxqp4wQ0ziaxiEDqgSxjQsjxty9UzElhSauqEJZ9yNgdFiuyvxDUYQP8fKC2Eh0yLke1O1h-bmE0jF0Hb1n0iXMv90v3S_7VMaMVzqBsCF5sK3wtiDWmCoWVy40IbhQQnF1cM8YI1Abd6pLXSoQ17PH7omcK-ImU9JUqiKbo7yBk-rMXJnAdsZyDvaEQtOI_vrGUAK8uQ4dnH0gp8pyqjxrIs2wI4fGPN2bqyNljHm9fWi8eEbN4zCsqIYFOS_oJNSNbUNHqNFPkLhHKCnZM9BKBxFZYxa9_mi8xECJAPgBMVNZsKG2yJxB5ULJTFuHdB21UB2bFSapoXk9aMhwaeXkla9RvyWRKGKOkiz8HC8ciyu3uz_hhj96OCRhaofE-EEXGMjJuz8MypA1gIYYIR081H1RuROgcSEKTW1chI3WPgTpCjp3u3yLEwUyTmX1cbaXa8MLidvEwtcydhMcKBsGrTr0_aD2KvBxRU4MuBD9B7Ujn6-w5CvPI1vysrCj_k2TwayUVLoqaa0ZbjAM5glOVsLjXiD3FjvFsj0G0jGNupCEq5NTzHIpJ2o7VQTq4BRreVzZr5i9vsQJ-avcGo6t2DiIbLyOaOZVSgToBU96MLLojnEZdzthe0r0MCd6g'\r\n            }\r\n        }).then(r => {\r\n\r\n            const f = r.data;\r\n\r\n            this.setState({ neg: f.negociacoes });\r\n            console.log(this.state.neg);\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <table className=\"table table-condensed table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Item</td>\r\n                            <td>Descricao</td>\r\n                            <td>Ultima Compra</td>\r\n                            <td>UC</td>\r\n                            <td>Negociacao</td>\r\n                            <td>Qtd</td>\r\n                            <td>F</td>\r\n                            {\r\n                                this.state.neg.length > 0 &&\r\n                                this.state.neg[1].respostasFornecedores.map((r,i) => {\r\n                                    return (\r\n                                        <td key={i}>\r\n                                            {r.nomeFornecedor}\r\n                                        </td>\r\n                                    )\r\n                                })\r\n\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.neg.map(neg => {\r\n                                if (neg.tipoRegistro === \"0\") {\r\n                                    return (\r\n                                        <tr key={neg.idx}>\r\n                                            <td>{neg.codigoItem}</td>\r\n                                            <td colSpan=\"33\">{neg.descricao}</td>\r\n                                        </tr>)\r\n                                } else {\r\n                                    return (\r\n                                        <tr key={neg.idx}>\r\n                                            <td >{neg.codigoItem}</td>\r\n                                            <td>{neg.descricao}</td>\r\n                                            <td>{neg.precoUltimaCompra}</td>\r\n                                            <td>0</td>\r\n                                            <td>{neg.precoFornecedorNegociado}</td>\r\n                                            <td>{neg.qtdNegociada}</td>\r\n                                            <td>{neg.posicaoFornecedorNegociado}</td>\r\n                                            {neg.respostasFornecedores.map((res, i) => {\r\n                                                return (\r\n                                                    <td className={res.melhorPreco > 0 ? 'melhor' : 'normal'} key={i}>{res.preco}</td>\r\n                                                )\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Negociacao from './Components/Negociacao'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Negociacao></Negociacao>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}